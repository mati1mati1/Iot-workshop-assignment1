import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Operations, SignalR, Usages, SignalRCustomCertificates, SignalRCustomDomains, SignalRPrivateEndpointConnections, SignalRPrivateLinkResources, SignalRSharedPrivateLinkResources } from "./operationsInterfaces";
import { SignalRManagementClientOptionalParams } from "./models";
export declare class SignalRManagementClient extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the SignalRManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Gets subscription Id which uniquely identify the Microsoft Azure subscription.
     *                       The subscription ID forms part of the URI for every service call.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: SignalRManagementClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    operations: Operations;
    signalR: SignalR;
    usages: Usages;
    signalRCustomCertificates: SignalRCustomCertificates;
    signalRCustomDomains: SignalRCustomDomains;
    signalRPrivateEndpointConnections: SignalRPrivateEndpointConnections;
    signalRPrivateLinkResources: SignalRPrivateLinkResources;
    signalRSharedPrivateLinkResources: SignalRSharedPrivateLinkResources;
}
//# sourceMappingURL=signalRManagementClient.d.ts.map